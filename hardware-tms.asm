include "hbios.inc"
include "constants.inc"
#include "utils.inc"

DATREG		EQU	$BE	; default port
CMDREG		EQU	$BF	; default port

NAME_START 	EQU	$3800
NAME_START_LOW	EQU	NAME_START & $FF
NAME_START_HIGH	EQU	(NAME_START / $100) | $40
NAME_LEN	EQU	$300

COLR_START	EQU	$2000
COLR_START_LOW	EQU	COLR_START & $FF
COLR_START_HIGH	EQU	(COLR_START / $100) | $40
COLR_LEN	EQU	$1800

PATN_START	EQU	$0000
PATN_START_LOW	EQU	PATN_START & $FF
PATN_START_HIGH	EQU	(PATN_START / $100) | $40
PATN_LEN	EQU	$1800

COL_TRANSPARENT		EQU	0
COL_BLACK		EQU	1
COL_MEDGREEN		EQU	2
COL_LIGGREEN		EQU	3
COL_DRKBLUE		EQU	4
COL_LIGBLUE		EQU	5
COL_DRKRED		EQU	6
COL_CYAN		EQU	7
COL_MEDRED		EQU	8
COL_LIGRED		EQU	9
COL_DRKYELLOW		EQU	10
COL_LIGYELLOW		EQU	11
COL_DRKGREEN		EQU	12
COL_MAGENTA		EQU	13
COL_GREY		EQU	14
COL_WHITE		EQU	15

; 0 128 Black (normal background)
; 1 129 Red
; 2 130 Green
; 3 131 Yellow
; 4 132 Blue
; 5 133 Magenta (blue/red)
; 6 134 Cyan (blue/green)
; 7 135 White (normal foreground)
; 8 136 Flashing black/white
; 9 137 Flashing red/cyan
; 10 138 Flashing green/magenta
; 11 139 Flashing yellow/blue
; 12 140 Flashing blue/yellow
; 13 141 Flashing magenta/green
; 14 142 Flashing cyan/red
; 15 143 Flashing white/black

	PUBLIC	MODE, GCOL, CLG, PLOT, DRAW, MOVE

	EXTERN	XEQ, EXPRI, ERROR, COMMA, EXPRN, EXTERR, INT, IDIV

#define		TMS_IODELAY	NOP	!
				NOP	!
				NOP	!
				NOP	!
				NOP	!
				NOP	!
				NOP


MODE:	CALL	EXPRI		; get mode
	EXX
	LD	A, L
	CP	2
	JP	NZ, MODEERR
CLG:
MODE2:
	CALL	INITMODE
	CALL	INITNAMETBL
	CALL	INITCOLRTBL
	CALL	INITPATNTBL
	JP	XEQ

MODEERR:
	LD	A, 31 ; ARGUMENT ERROR
	JP	ERROR

;
; GCOL [<numeric>,]<numeric>
; GCOL colour
; GCOL mode,colour

GCOL:	CALL	EXPRI		; MODE OR COLOUR
	EXX

	LD	A, (IY)
	CP	','
	JR	NZ, GCOL1	; COLOUR ONLY
	INC	IY

	POP	HL		; HL CONTAINS MODE - IGNORED FOR MOMENT

	CALL	EXPRI		; COLOUR
	EXX

	; COLOUR VALUE IN HL
GCOL1:	BIT	7, L
	JR	NZ, GCOL2	; SET BACKGROUND COLOUR

	LD	A, (TMS_COLOUR)
	AND	$0F		; MASK OFF CURRENT FOREGROUND COLOUR
	LD	B, A

	LD	A, L		; SHIFT UP TO HIGH NIBBLE
	ADD	A, A
	ADD	A, A
	ADD	A, A
	ADD	A, A
	OR	B		; MIXIN NEW COLOUR VALUE
	LD	(TMS_COLOUR), A
	JP	XEQ

GCOL2:
	LD	A, (TMS_COLOUR)
	AND	$F0
	LD	B, A
	LD	A, L
	RES	7, A
	LD	(TMS_COLOUR), A
	JP	XEQ

; PLOT Mode,X,Y
; PLOT <numeric>,<numeric>,<numeric>
; PLOT <numeric>,<numeric>
; PLOT BY <numeric>,<numeric>
; Only support by X, Y (alias for 69, X, Y)
; x - 0 to 1279, y 0 to 1023
; mode 2 raw dimensions are 256 by 192
; x = x / 5 and y = y / 5
PLOT:
	CALL	EXPRI		;"X"
	EXX

	LD	C, 5		; DIVIDE X BY 5 (FAST)
	MATH_DIV(HL,C)
	PUSH	HL

	CALL	COMMA
	CALL	EXPRN

	LD	DE, $2AAA		;LD	DED'E'B, 5.33333
	EXX
	LD	DE, $AAA9
	EXX
	LD	B, $82

	CALL	IDIV			; DIVIDE Y BY 5.3333333
	CALL	INT			; CONVERT TO INT
	EXX				; HL IS Y / 5.33333

	POP	DE
	PUSH	DE			; DE IS X / 5

	LD	A, E	; L => X AND $F8
	AND	$F8
	LD	E, A
	LD	D, 0

	LD	A, L	; A = Y MOD 8
	AND	$07

	SRL	L	; E = (Y / 8) * 256
	SRL	L
	SRL	L
	LD	H, L
	LD	L, 0

	ADD	HL, DE
	LD	C, A
	LD	B, 0
	ADD	HL, BC		; BYTE ADDRESS = L + DE + A

	CALL	TMS_RDADDR

	POP	DE
	LD	A, E
	AND	$07

	LD	B, A
	INC	B
	LD	A, $00
	SCF
LOOP:
	RRA
	DJNZ	LOOP
	LD	B, A
	CALL	TMS_RDADDR
	IN	A, (DATREG)
	LD	C, A
	TMS_IODELAY
	CALL	TMS_WRADDR
	LD	A, C
	OR	B
	OUT	(DATREG), A
	JP	XEQ

MOVE:
	CALL	EXPRN		;"X"
	EXX
	LD	(GCURX), HL
	CALL	COMMA
	CALL	EXPRI		; "Y"
	EXX
	LD	(GCURY), HL
	JP	XEQ

DRAW:
	CALL	EXTERR
	DEFM	"Not Implemented Yet", 0

INITMODE:
	LD	HL, MODE2REGS
	LD	B, 8
	LD	C, $7F	;(0 | $80) - 1
	LD	A, (TMS_COLOUR)		; SET TEXT COLOUR/G COLOUR BACK
	LD	(M2R_COL), A

INITMODE1:
	LD	A, (HL)
	OUT	(CMDREG), A
	TMS_IODELAY
	INC	HL
	INC	C
	LD	A, C
	OUT	(CMDREG), A
	TMS_IODELAY
	DJNZ	INITMODE1
	RET

INITNAMETBL:
	LD	L, NAME_START_LOW
	LD	H, NAME_START_HIGH
	CALL	TMS_WRADDR

	LD	DE, NAME_LEN
	LD	B, 0
	LD	C, DATREG
INITNAMETBL1:
	OUT	(C), B
	TMS_IODELAY
	INC	B
	DEC	DE
	LD	A, E
	OR	D
	JR	NZ, INITNAMETBL1
	RET

INITCOLRTBL:
	LD	H, COLR_START_HIGH
	LD	L, COLR_START_LOW
	CALL	TMS_WRADDR

	LD	DE, COLR_LEN
	LD	A, (TMS_COLOUR)
	LD	B, A
	LD	C, DATREG
INITCOLRTBL1:
	OUT	(C), B
	TMS_IODELAY
	DEC	DE
	LD	A, E
	OR	D
	JR	NZ, INITCOLRTBL1
	RET

INITPATNTBL:
	LD	H, PATN_START_HIGH
	LD	L, PATN_START_LOW
	CALL	TMS_WRADDR

	LD	DE, PATN_LEN
	LD	B, $0
	LD	C, DATREG
INITPATNTBL1:
	OUT	(C), B
	TMS_IODELAY
	DEC	DE
	LD	A, E
	OR	D
	JR	NZ, INITPATNTBL1
	RET

TMS_WRADDR:
	LD	A, L
	OUT	(CMDREG), A
	TMS_IODELAY
	LD	A, H
	OR	$40
	OUT	(CMDREG), A
	TMS_IODELAY
	RET

TMS_RDADDR:
	LD	A, L
	OUT	(CMDREG), A
	TMS_IODELAY
	LD	A, H
	OUT	(CMDREG), A
	TMS_IODELAY
	RET

MODE2REGS:
	DEFB	$02
	DEFB	$C2
	DEFB	$0E
	DEFB	$FF
	DEFB	$03
	DEFB	$76
	DEFB	$03
M2R_COL:
	DEFB	$0E

TMS_COLOUR:
	DEFB	COL_WHITE * 16 + COL_BLACK	; HIGH NIBBLE IS FORCOLOUR, LOW NIBBLE IS BACKCOLOUR

GCURX:
	DEFW	0
GCURY:
	DEFW	0
