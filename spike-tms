



   10 CMDREG%=&BF

   20 DATREG%=&BE

   30 REM

   40 DATA &02, &C2, &0E, &FF, &03, &76, &03, &0E

   50 DIM registers%(8)

   60 FOR i%=0 TO 7

   70   READ registers%(i%)

   80   OUT CMDREG%, registers%(i%)

   90   OUT CMDREG%, i% OR &80

  100 NEXT i%

200 PRINT "populate name table"

210 NameStart% = &3800

220 NameLength% = &300 - 1

230 OUT CMDREG%, NameStart% AND &FF

240 OUT CMDREG%, INT(NameStart% / &100) OR &40

250 FOR i% = 0 TO NameLength%

260 OUT DATREG%, i% MOD &100

270 NEXT i%

400 PRINT "color table"

410 CStart%=&2000

420 CLength%=&1800 - 1

430 OUT CMDREG%, CStart% AND &FF

440 OUT CMDREG%, INT(CStart% / &100) OR &40

450 FOR i% = 0 TO CLength%

460 OUT DATREG%, &D0

470 NEXT i%

510 PRINT "Populate the pattern table"

520 PatternStart% = &0000

530 PatternLength% = &1800 - 1

540 OUT CMDREG%, PatternStart% AND &FF

550 OUT CMDREG%, INT(PatternStart% / &100) OR &40

560 FOR i% = 0 TO PatternLength%

570   OUT DATREG%, &00

580 NEXT i%

600 PROC_point(0, 0)

610 PROC_point(128, 96)

620 END

1000 DEF PROC_point(x%, y%)

1010  byteAddress% = (x% AND &F0) + ((y% DIV 8) * 256) + (y% MOD 8)

1020  value% = 2^(7-(x% MOD 8))

1030  OUT CMDREG%, byteAddress% AND &FF

1040  OUT CMDREG%, (byteAddress% DIV &100) OR &40

1050  OUT DATREG%, value%

2000 ENDPROC





10 FOR x% = 0 TO 10

20 FOR y% = 0 TO 10

30 byteAddress% = (x% AND &F0) + ((y% DIV 8) * 256) + (y% MOD 8)

40 PRINT x%; "x"; y%; " "; byteAddress%

45 PRINT "V: "; 2^(7-(x% MOD 8))

50 NEXT y%

60 NEXT x%


10 FOR X% = 0 TO 64

20 FOR Y% = 0 TO 64

30 PLOT X% * 5, Y% * 5

35 PRINT

40 NEXT Y%

50 NEXT X%


   10 CMDREG%=&BF

   20 DATREG%=&BE

  30 INPUT X%

  32 INPUT Y%

  40 PROC_point(X%, Y%)

  50 REM PLOT X% * 5, Y% * 5

  54 PRINT

  55 PRINT "---"

  70 GOTO 30


1000 DEF PROC_point(x%, y%)

1010  byteAddress% = (x% AND &F8) + ((y% DIV 8) * 256) + (y% MOD 8)

1020  value% = 2^(7-(x% MOD 8))

1023 PRINT byteAddress%, value%

1030  OUT CMDREG%, byteAddress% AND &FF

1040  OUT CMDREG%, (byteAddress% DIV &100) OR &40

1050  OUT DATREG%, value%

2000 ENDPROC



1 CMDREG%=&BF

2 DATREG%=&BE

10 CLG

20 REM PROC_line(0, 0, 98, 16)

30 CLG

40 REM PROC_line(0, 16, 98, 0)

50 CLG

60 REM PROC_line(98, 16, 0, 0)

70 CLG

80 REM PROC_line(98, 0, 0, 16)

90 CLG

100 PROC_line(0, 0, 80, 50)

999 END

1000 DEF PROC_point(x%, y%)

1005 REM PRINT x%, y%

1010  byteAddress% = (x% AND &F8) + ((y% DIV 8) * 256) + (y% MOD 8)

1020  value% = 2^(7-(x% MOD 8))

1023  REM PRINT byteAddress%, value%

1030  OUT CMDREG%, byteAddress% AND &FF

1040  OUT CMDREG%, (byteAddress% DIV &100)

1050  value% = IN(DATREG%) OR value%

1060  OUT CMDREG%, byteAddress% AND &FF

1070  OUT CMDREG%, (byteAddress% DIV &100) OR &40

1080  OUT DATREG%, value%

2000 ENDPROC

3000 DEF PROC_line(X1%, Y1%, X2%, Y2%)

3001 IF X1% < X2% THEN 3010

3005 X%=X1% : Y%=Y1% : X1% = X2% : Y1% = Y2% : X2% = X% : Y2% = Y%

3010 PROC_point(X1%, Y1%)

3020 PROC_point(X2%, Y2%)

3022 IF Y1% > Y2% ystep%=-1 ELSE ystep%=1

3030 S% = ABS((X2% - X1%) DIV (Y2%-Y1%))

3032 PRINT ABS((X2% - X1%) DIV (Y2%-Y1%))

3034 PRINT ABS((Y2% - Y1%) DIV (X2%-X1%))

3040 PRINT S%

3050 IF X1% >= X2% THEN GOTO 4000

3060 PROC_point(X1%, Y1%)

3070 REM XS% = XS% + 1

3080 X1% = X1% + 1

3090 IF (X1% MOD S%) = 0 THEN PROC_point(X1%, Y1%) : Y1% = Y1% + ystep%

3100 GOTO 3050

4000 ENDPROC


















1 CMDREG=&BF

2 DATREG=&BE

10 CLG

20 REM PROC_line(0, 0, 98, 16)

30 CLG

40 REM PROC_line(0, 16, 98, 0)

50 CLG

60 REM PROC_line(98, 16, 0, 0)

70 CLG

80 REM PROC_line(98, 0, 0, 16)

90 CLG

100 PROC_line(0, 0, 80, 50)

999 END

1000 DEF PROC_point(x, y)

1005 REM PRINT x, y

1010  byteAddress = (x AND &F8) + ((y DIV 8) * 256) + (y MOD 8)

1020  value = 2^(7-(x MOD 8))

1023  REM PRINT byteAddress, value

1030  OUT CMDREG, byteAddress AND &FF

1040  OUT CMDREG, (byteAddress DIV &100)

1050  value = IN(DATREG) OR value

1060  OUT CMDREG, byteAddress AND &FF

1070  OUT CMDREG, (byteAddress DIV &100) OR &40

1080  OUT DATREG, value

2000 ENDPROC

3000 DEF PROC_line(X1, Y1, X2, Y2)

3001 IF X1 < X2 THEN 3010

3005 X=X1 : Y=Y1 : X1 = X2 : Y1 = Y2 : X2 = X : Y2 = Y

3010 PROC_point(X1, Y1)

3020 PROC_point(X2, Y2)

3022 IF Y1 > Y2 ystep=-1 ELSE ystep=1

3030 S = ABS((X2 - X1) / (Y2-Y1))

3032 PRINT ABS((X2 - X1) / (Y2-Y1))

3034 PRINT ABS((Y2 - Y1) / (X2-X1))

3040 XS = 0 : PRINT S

3050 IF X1 >= X2 THEN GOTO 4000

3060 PROC_point(X1, Y1)

3070 XS = XS + 1

3080 X1 = X1 + 1

3090 IF XS > S THEN XS = 0 : PROC_point(X1, Y1) : Y1 = Y1 + ystep

3100 GOTO 3050

4000 ENDPROC
