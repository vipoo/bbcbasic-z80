
BDOS	EQU	5

#include "tracing.inc"

#ifdef TRACING


	PUBLIC	PRTSTRZ, NEWLINE, PRTCHR


	PUBLIC	PRTSTRD
	PUBLIC	PRT_HLHLC, PRT_DEDEB
	PUBLIC	PRTHEXWORDHL, PRTHEXWORDIX, PRTHEXWORDDE
	PUBLIC	PRTHEX, PRTHEX_D, PRTHEX_C, PRTHEX_B
	PUBLIC	PRTDEC_HL, PRTDEC_DE

	EXTERN	STR, PTEXT, SWAP, PRTHL

PRTSTRD:
	EX	(SP),HL
	PUSH	AF
	CALL	PRTSTRZ
	POP	AF
	EX	(SP),HL
	RET

;===============================================================================
; PRINT A $ TERMINATED STRING AT (HL) WITHOUT DESTROYING ANY REGISTERS
PRTSTRZ:
	LD	A, (HL)			; GET NEXT CHAR
	INC	HL
	CP	'$'
	RET	Z
	CALL	PRTCHR
	JR	PRTSTRZ
;
; PRINT THE HEX WORD VALUE IN HL
;
PRTHEXWORDHL:
	PUSH	AF
	LD	A,H
	CALL	PRTHEX
	LD	A,L
	CALL	PRTHEX
	POP	AF
	RET

PRTHEXWORDDE:
	PUSH	HL
	PUSH	DE
	PUSH	DE
	POP	HL
	CALL 	PRTHEXWORDHL
	POP 	DE
	POP	HL
	RET

PRTHEXWORDBC:
	PUSH	HL
	PUSH	BC
	PUSH	BC
	POP	HL
	CALL	PRTHEXWORDHL
	POP	BC
	POP	HL
	RET

PRTHEXWORDIX:
	PUSH	HL
	PUSH	IX
	POP	HL
	CALL	PRTHEXWORDHL
	POP	HL
	RET

PRTCHR:
	PUSH	AF
	PUSH	IY
	PUSH	BC			; SAVE REGISTERS
	PUSH	DE
	PUSH	HL
	LD	E, A			; CHARACTER TO PRINT IN E
	LD	C, $02			; BDOS FUNCTION TO OUTPUT A CHARACTER
	CALL	BDOS			; DO IT
	POP	HL			; RESTORE REGISTERS
	POP	DE
	POP	BC
	POP	IY
	POP	AF
	RET

PRTHEX:
	PUSH	AF			; SAVE AF
	PUSH	DE			; SAVE DE
	CALL	HEXASCII		; CONVERT VALUE IN A TO HEX CHARS IN DE
	LD	A, D			; GET THE HIGH ORDER HEX CHAR
	CALL	PRTCHR			; PRINT IT
	LD	A, E			; GET THE LOW ORDER HEX CHAR
	CALL	PRTCHR			; PRINT IT
	POP	DE			; RESTORE DE
	POP	AF			; RESTORE AF
	RET				; DONE

HEXASCII:
	LD	D, A			; SAVE A IN D
	CALL	HEXCONV			; CONVERT LOW NIBBLE OF A TO HEX
	LD	E, A			; SAVE IT IN E
	LD	A, D			; GET ORIGINAL VALUE BACK
	RLCA				; ROTATE HIGH ORDER NIBBLE TO LOW BITS
	RLCA
	RLCA
	RLCA
	CALL	HEXCONV			; CONVERT NIBBLE
	LD	D, A			; SAVE IT IN D
	RET				; DONE

;===============================================================================
; CONVERT LOW NIBBLE OF A TO ASCII HEX

HEXCONV:
	AND	$0F	     		; LOW NIBBLE ONLY
	ADD	A, $90
	DAA
	ADC	A, $40
	DAA
	RET

;===============================================================================
; START A NEW LINE

NEWLINE:
	PUSH	AF
	LD	A, 13			; <CR>
	CALL	PRTCHR			; PRINT IT
	LD	A, 10			; <LF>
	CALL	PRTCHR			; PRINT IT
	POP	AF
	RET

PRTHEX_D:	PUSH	AF
		LD	A, D
		CALL	PRTHEX_D
		POP	AF
		RET

PRTHEX_C:	PUSH	AF
		LD	A, C
		CALL	PRTHEX
		POP	AF
		RET

PRTHEX_B:	PUSH	AF
		LD	A, B
		CALL	PRTHEX
		POP	AF
		RET

; PRTHEX_HLHLC:	CALL	PRTHEXWORDHL
; 		DEBUG(" ")
; 		EXX
; 		CALL	PRTHEXWORDHL
; 		DEBUG(" ")
; 		EXX
; 		JR	PRTHEX_C

PRT_DEDEB:	CALL	SWAP
		CALL	PRT_HLHLC
		CALL	SWAP
		RET

PRTDEC_HL:
	PUSH	HL
	PUSH	DE
	CALL	PRTHL
	POP	DE
	POP	HL
	RET

PRTDEC_DE:
	PUSH	HL
	PUSH	DE
	PUSH	DE
	POP	HL
	CALL	PRTHL
	POP	DE
	POP	HL
	RET

PRT_HLHLC:
	PUSH	HL
	PUSH	DE
	PUSH	BC
	EXX
	PUSH	HL
	PUSH	DE
	PUSH	BC
	EXX
	CALL	STR
	CALL	PTEXT
	EXX
	POP	BC
	POP	DE
	POP	HL
	EXX
	POP	BC
	POP	DE
	POP	HL
	RET

#endif ; IFDEF TRACING
