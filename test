#!/bin/bash

set +x

TEST_RUNNER_DIR=./tests-fixtures/
SCRIPT_TO_RUN=$1
TAIL=${2}
MOCK_FILE=${TEST_RUNNER_DIR}${SCRIPT_TO_RUN}.mock

sudo rm -f /tmp/output.txt

SCREEN_PID=$(sudo screen -ls | grep bbcbasictestrunner | cut -d. -f1 | awk '{print $1}')
if [ "$SCREEN_PID" != "" ]; then
  sudo kill $SCREEN_PID
fi

echo "${SCRIPT_TO_RUN}:"

CMD=""
if test -f "$MOCK_FILE"; then
  CMD="--hbios-mocks $MOCK_FILE $CMD"
fi

STARTUP_FAILED=1
TAILPID=

function cleanup()
{
  if [ $TAILPID ]; then
    kill $TAILPID
  fi
  if [ "$STARTUP_FAILED" == "1" ]; then
    cat /tmp/output.txt
  fi
}

trap cleanup EXIT

set -e
sudo screen -d -m -L -Logfile /tmp/output.txt -S "bbcbasictestrunner" $(which cpm) $CMD
sudo screen -r bbcbasictestrunner -p0 -X logfile flush 0
input="${SCRIPT_TO_RUN}.bas"
sudo screen -S bbcbasictestrunner -p 0 -X stuff "BBCBASIC^M"
set +e
STARTUP_FAILED=0

if [ "$TAIL" != "no-tail" ]; then
  tail -F -n50 /tmp/output.txt 2> /dev/null &
  TAILPID=$!
fi

cd ${TEST_RUNNER_DIR}

while IFS= read -r line
do

  if [ "$TAIL" == "no-tail" ]; then
    printf "."
  fi

  if [[ ${line:0:1} == "." ]] ; then
    if [ "${line}" == "./clear" ]; then
      sudo truncate -s 0 /tmp/output.txt
    else
      if [ "$TAIL" != "no-tail" ]; then
        echo
        printf "\e[33m"
        echo ${line}
        printf "\e[0m"
      fi

      if ! eval "$line"; then
        echo
        echo -e "\e[31m${line}"
        echo -e "FAILED\e[0m"
        exit 1
      fi
    fi

  else

    sudo screen -S bbcbasictestrunner -p 0 -X stuff "$line"
    sudo screen -S bbcbasictestrunner -p 0 -X stuff "^M"

    # NEXT_WAIT_TIME=0
    # until tail -n 1 /tmp/output.txt | grep -q "$line" || [ $NEXT_WAIT_TIME -eq 4 ]; do
    #   (( NEXT_WAIT_TIME++ ))
    #   sleep 0.25
    # done

  fi

done < "$input"

sudo screen -S bbcbasictestrunner -p 0 -X stuff "*bye^M"

( tail -F -n50 /tmp/output.txt  & ) | grep -q "*bye"

sudo screen -S bbcbasictestrunner -p 0 -X stuff "bye^M"

SCREEN_PID=$(sudo screen -ls | grep bbcbasictestrunner | cut -d. -f1 | awk '{print $1}')
if [ "$SCREEN_PID" != "" ]; then
  sudo kill $SCREEN_PID

  echo
  echo "Session failed to exit"
else
  if [[ -f "./${SCRIPT_TO_RUN}.expect" ]]; then
    awk '/RUN/,/efg/' /tmp/output.txt > ./.test-output.txt
    cp /tmp/output.txt ./.full-test-output.txt

    if ./${SCRIPT_TO_RUN}.expect ../.test-output.txt; then
      echo "PASSED"
    else
      echo "FAILED"
      exit 1
    fi
  else
    echo -e "\nPASSED"
  fi
fi

